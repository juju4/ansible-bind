{{ ansible_managed | comment('c') }}
// named.conf.options
options {
        version "{{ bind_versionÂ }}";

{% if ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' %}
        directory "/var/cache/bind";
        statistics-file "/var/cache/bind/named.stats";
        memstatistics-file "/var/cache/bind/named.memstats";
        dump-file "/var/cache/bind/named.dump";
{% endif %}

        // If there is a firewall between you and nameservers you want
        // to talk to, you may need to fix the firewall to allow multiple
        // ports to talk.  See http://www.kb.cert.org/vuls/id/800113

        // If your ISP provided one or more IP addresses for stable
        // nameservers, you probably want to use them as forwarders.
        // Uncomment the following block, and insert the addresses replacing
        // the all-0's placeholder.

{% if bind_dns_forwarders is defined and bind_dns_forwarders != [] %}
        forwarders {
{% for ip in bind_dns_forwarders %}
              {{ ip }};
{% endfor %}
        };
{% endif %}
{% if bind_dns_forward_only %}
        forward only;
{% endif %}

        //query-source port 53;

        //========================================================================
        // If BIND logs error messages about the root key being expired,
        // you will need to update your keys.  See https://www.isc.org/bind-keys
        //========================================================================
        //dnssec-enable yes;
        dnssec-validation {{ bind_dnssec_validation | lower }};

        auth-nxdomain no;    # conform to RFC1035

        listen-on port 53 {
{% for ip in bind_listen_ipv4 %}
		{{ ip }};
{% endfor %}
	};
        listen-on-v6 port 53 {
{% for ip in bind_listen_ipv6 %}
		{{ ip }};
{% endfor %}
	};

{# rhel setup: chroot named #}
{% if ansible_os_family == "RedHat" %}
        directory       "/var/named";
        dump-file       "/var/named/data/cache_dump.db";
        statistics-file "/var/named/data/named_stats.txt";
        memstatistics-file "/var/named/data/named_mem_stats.txt";

        /*
         - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
         - If you are building a RECURSIVE (caching) DNS server, you need to enable
           recursion.
         - If your recursive DNS server has a public IP address, you MUST enable access
           control to limit queries to your legitimate users. Failing to do so will
           cause your server to become part of large scale DNS amplification
           attacks. Implementing BCP38 within your network would greatly
           reduce such attack surface
        */
{# FIXME! probably better to disable if server is external/opened #}
        recursion yes;

        /* Path to ISC DLV key */
        bindkeys-file "/etc/named.iscdlv.key";

        managed-keys-directory "/var/named/dynamic";

        pid-file "/run/named/named.pid";
        session-keyfile "/run/named/session.key";
{% endif %}

{# team cymru secure template #}
        zone-statistics yes;

        // Prevent DoS attacks by generating bogus zone transfer
        // requests.  This will result in slower updates to the
        // slave servers (e.g. they will await the poll interval
        // before checking for updates).
        notify no;

                // Generate more efficient zone transfers.  This will place
        // multiple DNS records in a DNS message, instead of one per
        // DNS message.
        transfer-format many-answers;

        // Set the maximum zone transfer time to something more
        // reasonable.  In this case, we state that any zone transfer
        // that takes longer than 60 minutes is unlikely to ever
        // complete.  WARNING:  If you have very large zone files,
        // adjust this to fit your requirements.
        max-transfer-time-in 60;

        // We have no dynamic interfaces, so BIND shouldn't need to
        // poll for interface state {UP|DOWN}.
        interface-interval 0;

        allow-transfer {
            // Zone transfers limited to members of the
            // "xfer" ACL.
            xfer;
        };

        allow-query {
            // Accept queries from our "trusted" ACL.  We will
            // allow anyone to query our master zones below.
            // This prevents us from becoming a free DNS server
            // to the masses.
            trusted;
        };

        allow-query-cache {
            // Accept queries of our cache from our "trusted" ACL.
            trusted;
        };

{% if bind_rpz is defined and bind_rpz %}
        response-policy {
            zone "whitelist.rpz" policy PASSTHRU;
            zone "local.rpz";
{% if bind_misp_apikey != '' and bind_misp_url != '' %}
            zone "misp.rpz";
{% endif %}
            //zone "rpz.spamhaus.org" policy CNAME warning.domain.org;
        };

{% endif %}

};
