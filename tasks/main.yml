---

- name: Include version-specific variables for Ubuntu.
  ansible.builtin.include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
  when: ansible_distribution == 'Ubuntu'
- name: Include version-specific variables for RedHat
  ansible.builtin.include_vars: "RedHat-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_os_family == "RedHat"

- name: Import debian
  ansible.builtin.import_tasks: debian.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Import redhat
  ansible.builtin.import_tasks: redhat.yml
  when: ansible_os_family == "RedHat"

- name: Install new named.conf options with dnssec
  ansible.builtin.template:
    src: named.conf.options.j2
    dest: "{{ bind_etc }}/named.conf.options"
    backup: yes
    group: "{{ bind_user }}"
    mode: '0644'
  notify:
    - Restart bind

- name: Bind Zones
  when: bind_zones != []
  block:
    - name: Include zones
      ansible.builtin.include_tasks: zones.yml
      vars:
        zone: "{{ outer_item }}"
      with_items: "{{ bind_zones }}"
      loop_control:
        loop_var: outer_item

- name: Import bind-secure-template
  ansible.builtin.import_tasks: bind-secure-template.yml

- name: Import ipv6
  ansible.builtin.import_tasks: ipv6.yml
  when: bind_disable_ipv6 is defined and bind_disable_ipv6

- name: Import bind-rpz
  ansible.builtin.import_tasks: bind-rpz.yml
  when: bind_rpz is defined and bind_rpz

- name: Import bind-blackhole-malwaredomainslist
  ansible.builtin.import_tasks: bind-blackhole-malwaredomainslist.yml
  when: bind_malwaredomainslist_blackhole is defined and bind_malwaredomainslist_blackhole

- name: Import misp-integration
  ansible.builtin.import_tasks: misp-integration.yml
  when: bind_misp_apikey and bind_misp_url

## Centos7: can't replace named.conf when named-chroot active
- name: Import peerdns
  ansible.builtin.import_tasks: peerdns.yml
  when: ansible_os_family == "RedHat"

# - meta: flush_handlers
## should be at the end, else can lose dns connectivity
- name: Import resolvconf2
  ansible.builtin.import_tasks: resolvconf2.yml
  when: not (ansible_virtualization_type is defined and ansible_virtualization_type == "docker")

- name: Import monitoring-nrpe
  ansible.builtin.import_tasks: monitoring-nrpe.yml
  when: bind_monitoring_nrpe is defined and bind_monitoring_nrpe

- name: Ensure bind is running and enabled on boot.
  ansible.builtin.service:
    name: "{{ bind_svc }}"
    state: started
    enabled: yes
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
        )

## in some case, dnssec checks fail on first execution
- name: Flush handlers
  ansible.builtin.meta: flush_handlers
- name: Give little pause for bind initialization
  ansible.builtin.pause:
    seconds: 3
